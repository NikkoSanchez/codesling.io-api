language: node_js;
node_js:
  - "9"
services: "postgresql"

# defines the directores to cache so we don't have to reinstall it if it's up to date.
cache:
  directories:
    - node_modules
    - rest-server/node_modules
    - socket-server/node_modules

# install additional dependencies required by the project
# before_install:
# install:

before_script:
  # Create a database for your application
  - psql -c 'create database codesling;' -U postgres
  - psql -c "create user root with superuser password '';" -U postgres
  # set up environment
  - yarn
  - yarn buildEnv
  - yarn setup
  # might not need the next line, david cause you're droping the db and starting over
  - yarn db:setup:rest-server
  - yarn start &
  - sleep 10

script:
  - yarn test
  - find . -type d -name "*node_modules*" -prune -o -type f -print | zip latest.zip -@
  - mkdir -p dpl_cd_upload
  - mv latest.zip dpl_cd_upload/latest.zip

deploy:
- provider: s3
  # define access key and secret in travis
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  local_dir: dpl_cd_upload
  # prevents travis from deleting your build artifacts, manually delete deprecated files from Amazon s3 console.
  skip_cleanup: true
  on: &2
    repo: yadleo/codesling.io-api
    branch: travis
  bucket: hrla21legacy
  region: us-west-1

- provider: codedeploy
  access_key_id: $AWS_ACCESS_KEY
  secret_access_key: $AWS_SECRET_KEY
  bucket: hrla21legacy
  key: latest.zip
  bundle_type: zip
  application: legacy
  deployment_group: hrla21
  region: us-west-1
  on: *2
  
# optional before_deploy
# optional deploy:
  # skip_cleanup: true
# optional after_deploy
# after_script: 

# "comment": "should only test socket-server cause there's no test for rest-server something, npm-run-all -s -c test:rest-server test:socket-server",